name: Build Tool
permissions:
  contents: write
on:
  create:
      branches:
        - release/**
        
  push:
      branches:
        - main
        - development 
      paths-ignore:
        - 'docs/**'
        - 'README.md'
        - 'LICENSE'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.os }} - ${{ matrix.arch }}
    strategy:
      matrix:
        os: [linux, windows, darwin, freebsd]
        arch: [amd64, 386]
        include:
          - os: linux
            goos: linux
            goarch: amd64
          - os: linux
            goos: linux
            goarch: 386
          - os: windows
            goos: windows
            goarch: amd64
            binary_ext: ".exe"
          - os: windows
            goos: windows
            goarch: 386
            binary_ext: ".exe"
          - os: darwin
            goos: darwin
            goarch: amd64
          - os: freebsd
            goos: freebsd
            goarch: amd64
          - os: freebsd
            goos: freebsd
            goarch: 386
    env:
      VERSION: "latest"
      OUTPUT_DIR: ".bin"
      BINARY_NAME: "nioscli${{ matrix.binary_ext }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get Build Version
        if: startsWith(github.ref, 'refs/heads/release') || startsWith(github.ref, 'refs/heads/hotfix') 
        run: |
          echo "Current ref: $GITHUB_REF"
          version="${GITHUB_REF#refs/heads/release/}"
          echo "Detected Version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV
        shell: bash
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Build binary
        run: make build_all

      - name: Archive build artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: "nioscli-binaries"
          path: .bin/  # Archive all binaries generated under the .bin directory
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/heads/release') || startsWith(github.ref, 'refs/heads/hotfix')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          draft: false
          prerelease: false

      - name: Upload Build Binaries to Release
        if: startsWith(github.ref, 'refs/heads/release') || startsWith(github.ref, 'refs/heads/hotfix')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .bin/
          asset_name: "nioscli-binaries-${{ env.VERSION }}.tar.gz"
          asset_content_type: application/octet-stream
