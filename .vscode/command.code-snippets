{
    "createNewCommand": {
        "prefix": "create-new-command",
        "body": [
            "package $1",
            "import (",
            "   \"fmt\"",
            "   \"io/fs\"",
            "   \"os\"",
            "   \"path/filepath\"",
            "   \"strings\"",
            "   \"github.com/dev-vinicius-andrade/nioscli/helpers\"",
            "   \"github.com/dev-vinicius-andrade/nioscli/types/colors\"",
            "   \"github.com/dev-vinicius-andrade/nioscli/types/context\"",
            "   \"github.com/fatih/color\"",
            "   \"github.com/spf13/cobra\"",
            ")",
            "type commandDefinition struct {",
            "   cmd           *cobra.Command",
            "   context       *context.NiOsContext",
            "   parentCommand *cobra.Command",
            "   //Add more command definition variables here",
            "}",
            "",
            "func (c *commandDefinition) runCommand(cmd *cobra.Command, args []string) {",
            "}",
            "func (c *commandDefinition) createCommandDefinition() *cobra.Command {",
            "   command := &cobra.Command{",
            "       Use:   \"$2\",",
            "       Short: \"Short Command Description\",",
            "       Long:  \"Long Command Description\",",
            "       Run: func(cmd *cobra.Command, args []string) {",
            "        c.runCommand(cmd, args)",
            "       },",
            "   }",
            "   c.cmd = command",
            "   c.defineFlags()",
            "   c.defineSubCommands()",
            "   helpers.CobraHelper.AddCommandToParent(command, c.parentCommand)",
            "   return command",
            "}",
            "func (c *commandDefinition) defineSubCommands() {",
            "   // Add subcommands here",
            "}",
            "func (c *commandDefinition) defineFlags() {",
            "   // Add flags here",
            "}",
            "func CreateCommand(context *context.NiOsContext, parentCommand *cobra.Command) *cobra.Command {",
            "   command := &commandDefinition{",
            "       context:       context,",
            "       parentCommand: parentCommand,",
            "      //Add your command definition extra default values here",
            "   }",
            "   return command.createCommandDefinition()",
            "}"

        ],
        "description": "Create a new command"
    }
}